// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// nonnan_ind
arma::rowvec nonnan_ind(arma::rowvec x);
RcppExport SEXP _BAREB_nonnan_ind(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::rowvec >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(nonnan_ind(x));
    return rcpp_result_gen;
END_RCPP
}
// rowsome
arma::mat rowsome(arma::mat x, arma::rowvec ind);
RcppExport SEXP _BAREB_rowsome(SEXP xSEXP, SEXP indSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type ind(indSEXP);
    rcpp_result_gen = Rcpp::wrap(rowsome(x, ind));
    return rcpp_result_gen;
END_RCPP
}
// ton
arma::rowvec ton(int n);
RcppExport SEXP _BAREB_ton(SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(ton(n));
    return rcpp_result_gen;
END_RCPP
}
// colsome
arma::mat colsome(arma::mat x, arma::rowvec ind);
RcppExport SEXP _BAREB_colsome(SEXP xSEXP, SEXP indSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type ind(indSEXP);
    rcpp_result_gen = Rcpp::wrap(colsome(x, ind));
    return rcpp_result_gen;
END_RCPP
}
// subsome
arma::mat subsome(arma::mat x, arma::rowvec ind);
RcppExport SEXP _BAREB_subsome(SEXP xSEXP, SEXP indSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type ind(indSEXP);
    rcpp_result_gen = Rcpp::wrap(subsome(x, ind));
    return rcpp_result_gen;
END_RCPP
}
// dmvnrm_arma0
double dmvnrm_arma0(arma::rowvec x, arma::rowvec mean, double sigma_square, bool logd);
RcppExport SEXP _BAREB_dmvnrm_arma0(SEXP xSEXP, SEXP meanSEXP, SEXP sigma_squareSEXP, SEXP logdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::rowvec >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type mean(meanSEXP);
    Rcpp::traits::input_parameter< double >::type sigma_square(sigma_squareSEXP);
    Rcpp::traits::input_parameter< bool >::type logd(logdSEXP);
    rcpp_result_gen = Rcpp::wrap(dmvnrm_arma0(x, mean, sigma_square, logd));
    return rcpp_result_gen;
END_RCPP
}
// dmvnrm_arma
double dmvnrm_arma(arma::rowvec x, arma::rowvec mean, double sigma_square, bool logd);
RcppExport SEXP _BAREB_dmvnrm_arma(SEXP xSEXP, SEXP meanSEXP, SEXP sigma_squareSEXP, SEXP logdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::rowvec >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type mean(meanSEXP);
    Rcpp::traits::input_parameter< double >::type sigma_square(sigma_squareSEXP);
    Rcpp::traits::input_parameter< bool >::type logd(logdSEXP);
    rcpp_result_gen = Rcpp::wrap(dmvnrm_arma(x, mean, sigma_square, logd));
    return rcpp_result_gen;
END_RCPP
}
// kernelC
double kernelC(arma::rowvec x, arma::rowvec y, double theta, double tau);
RcppExport SEXP _BAREB_kernelC(SEXP xSEXP, SEXP ySEXP, SEXP thetaSEXP, SEXP tauSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::rowvec >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    rcpp_result_gen = Rcpp::wrap(kernelC(x, y, theta, tau));
    return rcpp_result_gen;
END_RCPP
}
// updateC
arma::mat updateC(arma::mat Z, double theta, double tau);
RcppExport SEXP _BAREB_updateC(SEXP ZSEXP, SEXP thetaSEXP, SEXP tauSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    rcpp_result_gen = Rcpp::wrap(updateC(Z, theta, tau));
    return rcpp_result_gen;
END_RCPP
}
// getind
arma::rowvec getind(arma::rowvec x, double c);
RcppExport SEXP _BAREB_getind(SEXP xSEXP, SEXP cSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::rowvec >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type c(cSEXP);
    rcpp_result_gen = Rcpp::wrap(getind(x, c));
    return rcpp_result_gen;
END_RCPP
}
// ind
arma::rowvec ind(arma::rowvec x, arma::rowvec index);
RcppExport SEXP _BAREB_ind(SEXP xSEXP, SEXP indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::rowvec >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type index(indexSEXP);
    rcpp_result_gen = Rcpp::wrap(ind(x, index));
    return rcpp_result_gen;
END_RCPP
}
// updateBeta
List updateBeta(arma::mat X, arma::mat Y, arma::mat Z, arma::mat delta, arma::mat Beta, arma::cube Gamma, arma::rowvec E, arma::mat R, double S, arma::rowvec Ds, arma::mat mustar, arma::mat mu, double sigma, arma::rowvec c, arma::mat C, arma::mat step, arma::mat runif, int n, int m, int T0, int p, int q, arma::mat D, double theta, double tau);
RcppExport SEXP _BAREB_updateBeta(SEXP XSEXP, SEXP YSEXP, SEXP ZSEXP, SEXP deltaSEXP, SEXP BetaSEXP, SEXP GammaSEXP, SEXP ESEXP, SEXP RSEXP, SEXP SSEXP, SEXP DsSEXP, SEXP mustarSEXP, SEXP muSEXP, SEXP sigmaSEXP, SEXP cSEXP, SEXP CSEXP, SEXP stepSEXP, SEXP runifSEXP, SEXP nSEXP, SEXP mSEXP, SEXP T0SEXP, SEXP pSEXP, SEXP qSEXP, SEXP DSEXP, SEXP thetaSEXP, SEXP tauSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Beta(BetaSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type Gamma(GammaSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type E(ESEXP);
    Rcpp::traits::input_parameter< arma::mat >::type R(RSEXP);
    Rcpp::traits::input_parameter< double >::type S(SSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type Ds(DsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mustar(mustarSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type c(cSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type C(CSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type step(stepSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type runif(runifSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type T0(T0SEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type D(DSEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    rcpp_result_gen = Rcpp::wrap(updateBeta(X, Y, Z, delta, Beta, Gamma, E, R, S, Ds, mustar, mu, sigma, c, C, step, runif, n, m, T0, p, q, D, theta, tau));
    return rcpp_result_gen;
END_RCPP
}
// updateBetanomiss
List updateBetanomiss(arma::mat X, arma::mat Y, arma::mat Z, arma::mat delta, arma::mat Beta, arma::cube Gamma, arma::rowvec E, arma::mat R, double S, arma::rowvec Ds, arma::mat mu, double sigma, arma::mat C, arma::mat step, arma::mat runif, int n, int m, int T0, int p, int q, arma::mat D, double theta, double tau);
RcppExport SEXP _BAREB_updateBetanomiss(SEXP XSEXP, SEXP YSEXP, SEXP ZSEXP, SEXP deltaSEXP, SEXP BetaSEXP, SEXP GammaSEXP, SEXP ESEXP, SEXP RSEXP, SEXP SSEXP, SEXP DsSEXP, SEXP muSEXP, SEXP sigmaSEXP, SEXP CSEXP, SEXP stepSEXP, SEXP runifSEXP, SEXP nSEXP, SEXP mSEXP, SEXP T0SEXP, SEXP pSEXP, SEXP qSEXP, SEXP DSEXP, SEXP thetaSEXP, SEXP tauSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Beta(BetaSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type Gamma(GammaSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type E(ESEXP);
    Rcpp::traits::input_parameter< arma::mat >::type R(RSEXP);
    Rcpp::traits::input_parameter< double >::type S(SSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type Ds(DsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type C(CSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type step(stepSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type runif(runifSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type T0(T0SEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type D(DSEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    rcpp_result_gen = Rcpp::wrap(updateBetanomiss(X, Y, Z, delta, Beta, Gamma, E, R, S, Ds, mu, sigma, C, step, runif, n, m, T0, p, q, D, theta, tau));
    return rcpp_result_gen;
END_RCPP
}
// ind1
arma::rowvec ind1(arma::rowvec x, arma::rowvec indi, arma::rowvec index);
RcppExport SEXP _BAREB_ind1(SEXP xSEXP, SEXP indiSEXP, SEXP indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::rowvec >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type indi(indiSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type index(indexSEXP);
    rcpp_result_gen = Rcpp::wrap(ind1(x, indi, index));
    return rcpp_result_gen;
END_RCPP
}
// updateGamma
List updateGamma(arma::mat X, arma::mat Y, arma::mat Z, arma::mat delta, arma::mat Beta, arma::cube Gamma, arma::rowvec E, arma::mat R, double S, arma::rowvec Ds, arma::mat mu, arma::mat mustar, double sigma, arma::rowvec c, arma::cube step, arma::cube runif, int n, int m, int T0, int p, int q, arma::mat D, double theta, double tau);
RcppExport SEXP _BAREB_updateGamma(SEXP XSEXP, SEXP YSEXP, SEXP ZSEXP, SEXP deltaSEXP, SEXP BetaSEXP, SEXP GammaSEXP, SEXP ESEXP, SEXP RSEXP, SEXP SSEXP, SEXP DsSEXP, SEXP muSEXP, SEXP mustarSEXP, SEXP sigmaSEXP, SEXP cSEXP, SEXP stepSEXP, SEXP runifSEXP, SEXP nSEXP, SEXP mSEXP, SEXP T0SEXP, SEXP pSEXP, SEXP qSEXP, SEXP DSEXP, SEXP thetaSEXP, SEXP tauSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Beta(BetaSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type Gamma(GammaSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type E(ESEXP);
    Rcpp::traits::input_parameter< arma::mat >::type R(RSEXP);
    Rcpp::traits::input_parameter< double >::type S(SSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type Ds(DsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mu(muSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mustar(mustarSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type c(cSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type step(stepSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type runif(runifSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type T0(T0SEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type D(DSEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    rcpp_result_gen = Rcpp::wrap(updateGamma(X, Y, Z, delta, Beta, Gamma, E, R, S, Ds, mu, mustar, sigma, c, step, runif, n, m, T0, p, q, D, theta, tau));
    return rcpp_result_gen;
END_RCPP
}
// updateGammanomiss
List updateGammanomiss(arma::mat X, arma::mat Y, arma::mat Z, arma::mat delta, arma::mat Beta, arma::cube Gamma, arma::rowvec E, arma::mat R, double S, arma::rowvec Ds, arma::mat mu, double sigma, arma::cube step, arma::cube runif, int n, int m, int T0, int p, int q, arma::mat D, double theta, double tau);
RcppExport SEXP _BAREB_updateGammanomiss(SEXP XSEXP, SEXP YSEXP, SEXP ZSEXP, SEXP deltaSEXP, SEXP BetaSEXP, SEXP GammaSEXP, SEXP ESEXP, SEXP RSEXP, SEXP SSEXP, SEXP DsSEXP, SEXP muSEXP, SEXP sigmaSEXP, SEXP stepSEXP, SEXP runifSEXP, SEXP nSEXP, SEXP mSEXP, SEXP T0SEXP, SEXP pSEXP, SEXP qSEXP, SEXP DSEXP, SEXP thetaSEXP, SEXP tauSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Beta(BetaSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type Gamma(GammaSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type E(ESEXP);
    Rcpp::traits::input_parameter< arma::mat >::type R(RSEXP);
    Rcpp::traits::input_parameter< double >::type S(SSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type Ds(DsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type step(stepSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type runif(runifSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type T0(T0SEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type D(DSEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    rcpp_result_gen = Rcpp::wrap(updateGammanomiss(X, Y, Z, delta, Beta, Gamma, E, R, S, Ds, mu, sigma, step, runif, n, m, T0, p, q, D, theta, tau));
    return rcpp_result_gen;
END_RCPP
}
// updateE
List updateE(arma::mat Beta, arma::cube Gamma, arma::rowvec w, arma::mat X, arma::mat Y, arma::mat Z, arma::mat delta, arma::rowvec E, arma::mat R, double S, arma::rowvec Ds, arma::mat mu, arma::mat mustar, double sigma, arma::rowvec c, int n, int m, int T0, int p, int q, arma::mat D);
RcppExport SEXP _BAREB_updateE(SEXP BetaSEXP, SEXP GammaSEXP, SEXP wSEXP, SEXP XSEXP, SEXP YSEXP, SEXP ZSEXP, SEXP deltaSEXP, SEXP ESEXP, SEXP RSEXP, SEXP SSEXP, SEXP DsSEXP, SEXP muSEXP, SEXP mustarSEXP, SEXP sigmaSEXP, SEXP cSEXP, SEXP nSEXP, SEXP mSEXP, SEXP T0SEXP, SEXP pSEXP, SEXP qSEXP, SEXP DSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Beta(BetaSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type Gamma(GammaSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type w(wSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type E(ESEXP);
    Rcpp::traits::input_parameter< arma::mat >::type R(RSEXP);
    Rcpp::traits::input_parameter< double >::type S(SSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type Ds(DsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mu(muSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mustar(mustarSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type c(cSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type T0(T0SEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type D(DSEXP);
    rcpp_result_gen = Rcpp::wrap(updateE(Beta, Gamma, w, X, Y, Z, delta, E, R, S, Ds, mu, mustar, sigma, c, n, m, T0, p, q, D));
    return rcpp_result_gen;
END_RCPP
}
// updateEnomiss
List updateEnomiss(arma::mat Beta, arma::cube Gamma, arma::rowvec w, arma::mat X, arma::mat Y, arma::mat Z, arma::mat delta, arma::rowvec E, arma::mat R, double S, arma::rowvec Ds, arma::mat mu, double sigma, int n, int m, int T0, int p, int q, arma::mat D);
RcppExport SEXP _BAREB_updateEnomiss(SEXP BetaSEXP, SEXP GammaSEXP, SEXP wSEXP, SEXP XSEXP, SEXP YSEXP, SEXP ZSEXP, SEXP deltaSEXP, SEXP ESEXP, SEXP RSEXP, SEXP SSEXP, SEXP DsSEXP, SEXP muSEXP, SEXP sigmaSEXP, SEXP nSEXP, SEXP mSEXP, SEXP T0SEXP, SEXP pSEXP, SEXP qSEXP, SEXP DSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Beta(BetaSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type Gamma(GammaSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type w(wSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type E(ESEXP);
    Rcpp::traits::input_parameter< arma::mat >::type R(RSEXP);
    Rcpp::traits::input_parameter< double >::type S(SSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type Ds(DsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type T0(T0SEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type D(DSEXP);
    rcpp_result_gen = Rcpp::wrap(updateEnomiss(Beta, Gamma, w, X, Y, Z, delta, E, R, S, Ds, mu, sigma, n, m, T0, p, q, D));
    return rcpp_result_gen;
END_RCPP
}
// updatemu
arma::mat updatemu(arma::mat R, arma::mat Z, arma::mat X, arma::cube Gamma, arma::rowvec K, arma::mat Beta, arma::rowvec E, int m, int n, int p, int q);
RcppExport SEXP _BAREB_updatemu(SEXP RSEXP, SEXP ZSEXP, SEXP XSEXP, SEXP GammaSEXP, SEXP KSEXP, SEXP BetaSEXP, SEXP ESEXP, SEXP mSEXP, SEXP nSEXP, SEXP pSEXP, SEXP qSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type R(RSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type Gamma(GammaSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type K(KSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Beta(BetaSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type E(ESEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    rcpp_result_gen = Rcpp::wrap(updatemu(R, Z, X, Gamma, K, Beta, E, m, n, p, q));
    return rcpp_result_gen;
END_RCPP
}
// Split
List Split(arma::rowvec w, int K, arma::mat Gamma, arma::rowvec Beta, arma::mat X, arma::mat Y, arma::mat Z, arma::rowvec R, arma::mat delta, arma::rowvec mu, arma::mat mu_star, double c, double sigma_square, arma::mat C, double theta, double tau, int m, int n, int q, int T0, double hyper_delta);
RcppExport SEXP _BAREB_Split(SEXP wSEXP, SEXP KSEXP, SEXP GammaSEXP, SEXP BetaSEXP, SEXP XSEXP, SEXP YSEXP, SEXP ZSEXP, SEXP RSEXP, SEXP deltaSEXP, SEXP muSEXP, SEXP mu_starSEXP, SEXP cSEXP, SEXP sigma_squareSEXP, SEXP CSEXP, SEXP thetaSEXP, SEXP tauSEXP, SEXP mSEXP, SEXP nSEXP, SEXP qSEXP, SEXP T0SEXP, SEXP hyper_deltaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::rowvec >::type w(wSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Gamma(GammaSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type Beta(BetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type R(RSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type mu(muSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mu_star(mu_starSEXP);
    Rcpp::traits::input_parameter< double >::type c(cSEXP);
    Rcpp::traits::input_parameter< double >::type sigma_square(sigma_squareSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type C(CSEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    Rcpp::traits::input_parameter< int >::type T0(T0SEXP);
    Rcpp::traits::input_parameter< double >::type hyper_delta(hyper_deltaSEXP);
    rcpp_result_gen = Rcpp::wrap(Split(w, K, Gamma, Beta, X, Y, Z, R, delta, mu, mu_star, c, sigma_square, C, theta, tau, m, n, q, T0, hyper_delta));
    return rcpp_result_gen;
END_RCPP
}
// Splitnomiss
List Splitnomiss(arma::rowvec w, int K, arma::mat Gamma, arma::rowvec Beta, arma::mat X, arma::mat Y, arma::mat Z, arma::rowvec R, arma::mat delta, arma::rowvec mu, double sigma_square, arma::mat C, double theta, double tau, int m, int n, int q, int T0, double hyper_delta);
RcppExport SEXP _BAREB_Splitnomiss(SEXP wSEXP, SEXP KSEXP, SEXP GammaSEXP, SEXP BetaSEXP, SEXP XSEXP, SEXP YSEXP, SEXP ZSEXP, SEXP RSEXP, SEXP deltaSEXP, SEXP muSEXP, SEXP sigma_squareSEXP, SEXP CSEXP, SEXP thetaSEXP, SEXP tauSEXP, SEXP mSEXP, SEXP nSEXP, SEXP qSEXP, SEXP T0SEXP, SEXP hyper_deltaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::rowvec >::type w(wSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Gamma(GammaSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type Beta(BetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type R(RSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type sigma_square(sigma_squareSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type C(CSEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    Rcpp::traits::input_parameter< int >::type T0(T0SEXP);
    Rcpp::traits::input_parameter< double >::type hyper_delta(hyper_deltaSEXP);
    rcpp_result_gen = Rcpp::wrap(Splitnomiss(w, K, Gamma, Beta, X, Y, Z, R, delta, mu, sigma_square, C, theta, tau, m, n, q, T0, hyper_delta));
    return rcpp_result_gen;
END_RCPP
}
// Merge
List Merge(arma::rowvec w, int K, arma::mat Gamma, arma::rowvec Beta, arma::mat X, arma::mat Y, arma::mat Z, arma::rowvec R, arma::mat delta, arma::rowvec mu, arma::mat mu_star, double c, double sigma_square, arma::mat C, double theta, double tau, int m, int n, int q, int T0, double hyper_delta);
RcppExport SEXP _BAREB_Merge(SEXP wSEXP, SEXP KSEXP, SEXP GammaSEXP, SEXP BetaSEXP, SEXP XSEXP, SEXP YSEXP, SEXP ZSEXP, SEXP RSEXP, SEXP deltaSEXP, SEXP muSEXP, SEXP mu_starSEXP, SEXP cSEXP, SEXP sigma_squareSEXP, SEXP CSEXP, SEXP thetaSEXP, SEXP tauSEXP, SEXP mSEXP, SEXP nSEXP, SEXP qSEXP, SEXP T0SEXP, SEXP hyper_deltaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::rowvec >::type w(wSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Gamma(GammaSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type Beta(BetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type R(RSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type mu(muSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mu_star(mu_starSEXP);
    Rcpp::traits::input_parameter< double >::type c(cSEXP);
    Rcpp::traits::input_parameter< double >::type sigma_square(sigma_squareSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type C(CSEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    Rcpp::traits::input_parameter< int >::type T0(T0SEXP);
    Rcpp::traits::input_parameter< double >::type hyper_delta(hyper_deltaSEXP);
    rcpp_result_gen = Rcpp::wrap(Merge(w, K, Gamma, Beta, X, Y, Z, R, delta, mu, mu_star, c, sigma_square, C, theta, tau, m, n, q, T0, hyper_delta));
    return rcpp_result_gen;
END_RCPP
}
// Mergenomiss
List Mergenomiss(arma::rowvec w, int K, arma::mat Gamma, arma::rowvec Beta, arma::mat X, arma::mat Y, arma::mat Z, arma::rowvec R, arma::mat delta, arma::rowvec mu, double sigma_square, arma::mat C, double theta, double tau, int m, int n, int q, int T0, double hyper_delta);
RcppExport SEXP _BAREB_Mergenomiss(SEXP wSEXP, SEXP KSEXP, SEXP GammaSEXP, SEXP BetaSEXP, SEXP XSEXP, SEXP YSEXP, SEXP ZSEXP, SEXP RSEXP, SEXP deltaSEXP, SEXP muSEXP, SEXP sigma_squareSEXP, SEXP CSEXP, SEXP thetaSEXP, SEXP tauSEXP, SEXP mSEXP, SEXP nSEXP, SEXP qSEXP, SEXP T0SEXP, SEXP hyper_deltaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::rowvec >::type w(wSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Gamma(GammaSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type Beta(BetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type R(RSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type sigma_square(sigma_squareSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type C(CSEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    Rcpp::traits::input_parameter< int >::type T0(T0SEXP);
    Rcpp::traits::input_parameter< double >::type hyper_delta(hyper_deltaSEXP);
    rcpp_result_gen = Rcpp::wrap(Mergenomiss(w, K, Gamma, Beta, X, Y, Z, R, delta, mu, sigma_square, C, theta, tau, m, n, q, T0, hyper_delta));
    return rcpp_result_gen;
END_RCPP
}
// RJi
List RJi(arma::rowvec w, int K, arma::mat Gamma, arma::rowvec Beta, arma::mat X, arma::mat Y, arma::mat Z, arma::rowvec R, arma::mat delta, arma::rowvec mu, arma::mat mu_star, double c, double sigma_square, arma::mat C, double theta, double tau, int m, int n, int q, int T0, double hyper_delta);
RcppExport SEXP _BAREB_RJi(SEXP wSEXP, SEXP KSEXP, SEXP GammaSEXP, SEXP BetaSEXP, SEXP XSEXP, SEXP YSEXP, SEXP ZSEXP, SEXP RSEXP, SEXP deltaSEXP, SEXP muSEXP, SEXP mu_starSEXP, SEXP cSEXP, SEXP sigma_squareSEXP, SEXP CSEXP, SEXP thetaSEXP, SEXP tauSEXP, SEXP mSEXP, SEXP nSEXP, SEXP qSEXP, SEXP T0SEXP, SEXP hyper_deltaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::rowvec >::type w(wSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Gamma(GammaSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type Beta(BetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type R(RSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type mu(muSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mu_star(mu_starSEXP);
    Rcpp::traits::input_parameter< double >::type c(cSEXP);
    Rcpp::traits::input_parameter< double >::type sigma_square(sigma_squareSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type C(CSEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    Rcpp::traits::input_parameter< int >::type T0(T0SEXP);
    Rcpp::traits::input_parameter< double >::type hyper_delta(hyper_deltaSEXP);
    rcpp_result_gen = Rcpp::wrap(RJi(w, K, Gamma, Beta, X, Y, Z, R, delta, mu, mu_star, c, sigma_square, C, theta, tau, m, n, q, T0, hyper_delta));
    return rcpp_result_gen;
END_RCPP
}
// RJinomiss
List RJinomiss(arma::rowvec w, int K, arma::mat Gamma, arma::rowvec Beta, arma::mat X, arma::mat Y, arma::mat Z, arma::rowvec R, arma::mat delta, arma::rowvec mu, double sigma_square, arma::mat C, double theta, double tau, int m, int n, int q, int T0, double hyper_delta);
RcppExport SEXP _BAREB_RJinomiss(SEXP wSEXP, SEXP KSEXP, SEXP GammaSEXP, SEXP BetaSEXP, SEXP XSEXP, SEXP YSEXP, SEXP ZSEXP, SEXP RSEXP, SEXP deltaSEXP, SEXP muSEXP, SEXP sigma_squareSEXP, SEXP CSEXP, SEXP thetaSEXP, SEXP tauSEXP, SEXP mSEXP, SEXP nSEXP, SEXP qSEXP, SEXP T0SEXP, SEXP hyper_deltaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::rowvec >::type w(wSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Gamma(GammaSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type Beta(BetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type R(RSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type sigma_square(sigma_squareSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type C(CSEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    Rcpp::traits::input_parameter< int >::type T0(T0SEXP);
    Rcpp::traits::input_parameter< double >::type hyper_delta(hyper_deltaSEXP);
    rcpp_result_gen = Rcpp::wrap(RJinomiss(w, K, Gamma, Beta, X, Y, Z, R, delta, mu, sigma_square, C, theta, tau, m, n, q, T0, hyper_delta));
    return rcpp_result_gen;
END_RCPP
}
// updateRi
arma::rowvec updateRi(arma::rowvec w, arma::mat Gamma, arma::rowvec Beta, arma::mat Y, arma::mat Z, arma::mat delta, arma::rowvec mu, arma::mat mu_star, double c, double sigma_square, int K, arma::mat X, int m, int n, int q);
RcppExport SEXP _BAREB_updateRi(SEXP wSEXP, SEXP GammaSEXP, SEXP BetaSEXP, SEXP YSEXP, SEXP ZSEXP, SEXP deltaSEXP, SEXP muSEXP, SEXP mu_starSEXP, SEXP cSEXP, SEXP sigma_squareSEXP, SEXP KSEXP, SEXP XSEXP, SEXP mSEXP, SEXP nSEXP, SEXP qSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::rowvec >::type w(wSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Gamma(GammaSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type Beta(BetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type mu(muSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mu_star(mu_starSEXP);
    Rcpp::traits::input_parameter< double >::type c(cSEXP);
    Rcpp::traits::input_parameter< double >::type sigma_square(sigma_squareSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    rcpp_result_gen = Rcpp::wrap(updateRi(w, Gamma, Beta, Y, Z, delta, mu, mu_star, c, sigma_square, K, X, m, n, q));
    return rcpp_result_gen;
END_RCPP
}
// updateRinomiss
arma::rowvec updateRinomiss(arma::rowvec w, arma::mat Gamma, arma::rowvec Beta, arma::mat Y, arma::mat Z, arma::mat delta, arma::rowvec mu, double sigma_square, int K, arma::mat X, int m, int n, int q);
RcppExport SEXP _BAREB_updateRinomiss(SEXP wSEXP, SEXP GammaSEXP, SEXP BetaSEXP, SEXP YSEXP, SEXP ZSEXP, SEXP deltaSEXP, SEXP muSEXP, SEXP sigma_squareSEXP, SEXP KSEXP, SEXP XSEXP, SEXP mSEXP, SEXP nSEXP, SEXP qSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::rowvec >::type w(wSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Gamma(GammaSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type Beta(BetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type sigma_square(sigma_squareSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    rcpp_result_gen = Rcpp::wrap(updateRinomiss(w, Gamma, Beta, Y, Z, delta, mu, sigma_square, K, X, m, n, q));
    return rcpp_result_gen;
END_RCPP
}
// sample_int
arma::rowvec sample_int(int size, arma::rowvec pro);
RcppExport SEXP _BAREB_sample_int(SEXP sizeSEXP, SEXP proSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type size(sizeSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type pro(proSEXP);
    rcpp_result_gen = Rcpp::wrap(sample_int(size, pro));
    return rcpp_result_gen;
END_RCPP
}
// updateR
arma::mat updateR(arma::mat w, arma::cube Gamma, arma::mat Beta, arma::mat Y, arma::mat Z, arma::mat delta, arma::mat mu, arma::mat mu_star, double c, int S, double sigma_square, arma::rowvec K, arma::rowvec E, arma::mat X, int m, int n, int q, int p, int T0);
RcppExport SEXP _BAREB_updateR(SEXP wSEXP, SEXP GammaSEXP, SEXP BetaSEXP, SEXP YSEXP, SEXP ZSEXP, SEXP deltaSEXP, SEXP muSEXP, SEXP mu_starSEXP, SEXP cSEXP, SEXP SSEXP, SEXP sigma_squareSEXP, SEXP KSEXP, SEXP ESEXP, SEXP XSEXP, SEXP mSEXP, SEXP nSEXP, SEXP qSEXP, SEXP pSEXP, SEXP T0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type w(wSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type Gamma(GammaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Beta(BetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mu(muSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mu_star(mu_starSEXP);
    Rcpp::traits::input_parameter< double >::type c(cSEXP);
    Rcpp::traits::input_parameter< int >::type S(SSEXP);
    Rcpp::traits::input_parameter< double >::type sigma_square(sigma_squareSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type K(KSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type E(ESEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type T0(T0SEXP);
    rcpp_result_gen = Rcpp::wrap(updateR(w, Gamma, Beta, Y, Z, delta, mu, mu_star, c, S, sigma_square, K, E, X, m, n, q, p, T0));
    return rcpp_result_gen;
END_RCPP
}
// updateRnomiss
arma::mat updateRnomiss(arma::mat w, arma::cube Gamma, arma::mat Beta, arma::mat Y, arma::mat Z, arma::mat delta, arma::mat mu, int S, double sigma_square, arma::rowvec K, arma::rowvec E, arma::mat X, int m, int n, int q, int p, int T0);
RcppExport SEXP _BAREB_updateRnomiss(SEXP wSEXP, SEXP GammaSEXP, SEXP BetaSEXP, SEXP YSEXP, SEXP ZSEXP, SEXP deltaSEXP, SEXP muSEXP, SEXP SSEXP, SEXP sigma_squareSEXP, SEXP KSEXP, SEXP ESEXP, SEXP XSEXP, SEXP mSEXP, SEXP nSEXP, SEXP qSEXP, SEXP pSEXP, SEXP T0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type w(wSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type Gamma(GammaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Beta(BetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mu(muSEXP);
    Rcpp::traits::input_parameter< int >::type S(SSEXP);
    Rcpp::traits::input_parameter< double >::type sigma_square(sigma_squareSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type K(KSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type E(ESEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type T0(T0SEXP);
    rcpp_result_gen = Rcpp::wrap(updateRnomiss(w, Gamma, Beta, Y, Z, delta, mu, S, sigma_square, K, E, X, m, n, q, p, T0));
    return rcpp_result_gen;
END_RCPP
}
// updatemustar
arma::mat updatemustar(arma::mat mu, arma::rowvec c, int n, int T0, arma::mat D);
RcppExport SEXP _BAREB_updatemustar(SEXP muSEXP, SEXP cSEXP, SEXP nSEXP, SEXP T0SEXP, SEXP DSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type mu(muSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type c(cSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type T0(T0SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type D(DSEXP);
    rcpp_result_gen = Rcpp::wrap(updatemustar(mu, c, n, T0, D));
    return rcpp_result_gen;
END_RCPP
}
// rtrun_norm
double rtrun_norm(double mu, double sigma, double a, double b);
RcppExport SEXP _BAREB_rtrun_norm(SEXP muSEXP, SEXP sigmaSEXP, SEXP aSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(rtrun_norm(mu, sigma, a, b));
    return rcpp_result_gen;
END_RCPP
}
// updateZstar
arma::mat updateZstar(arma::mat mu_star, arma::mat delta, int n, int T0);
RcppExport SEXP _BAREB_updateZstar(SEXP mu_starSEXP, SEXP deltaSEXP, SEXP nSEXP, SEXP T0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type mu_star(mu_starSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type T0(T0SEXP);
    rcpp_result_gen = Rcpp::wrap(updateZstar(mu_star, delta, n, T0));
    return rcpp_result_gen;
END_RCPP
}
// updatec
double updatec(arma::mat Zstar, arma::mat mu, arma::mat D, double sigmac, int n, int T0);
RcppExport SEXP _BAREB_updatec(SEXP ZstarSEXP, SEXP muSEXP, SEXP DSEXP, SEXP sigmacSEXP, SEXP nSEXP, SEXP T0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Zstar(ZstarSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mu(muSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type D(DSEXP);
    Rcpp::traits::input_parameter< double >::type sigmac(sigmacSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type T0(T0SEXP);
    rcpp_result_gen = Rcpp::wrap(updatec(Zstar, mu, D, sigmac, n, T0));
    return rcpp_result_gen;
END_RCPP
}
// updateBetanoDPP
List updateBetanoDPP(arma::mat X, arma::mat Y, arma::mat Z, arma::mat delta, arma::mat Beta, arma::cube Gamma, arma::rowvec E, arma::mat R, double S, arma::rowvec Ds, arma::mat mustar, arma::mat mu, double sigma, arma::rowvec c, arma::mat step, arma::mat runif, int n, int m, int T0, int p, int q, arma::mat D);
RcppExport SEXP _BAREB_updateBetanoDPP(SEXP XSEXP, SEXP YSEXP, SEXP ZSEXP, SEXP deltaSEXP, SEXP BetaSEXP, SEXP GammaSEXP, SEXP ESEXP, SEXP RSEXP, SEXP SSEXP, SEXP DsSEXP, SEXP mustarSEXP, SEXP muSEXP, SEXP sigmaSEXP, SEXP cSEXP, SEXP stepSEXP, SEXP runifSEXP, SEXP nSEXP, SEXP mSEXP, SEXP T0SEXP, SEXP pSEXP, SEXP qSEXP, SEXP DSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Beta(BetaSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type Gamma(GammaSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type E(ESEXP);
    Rcpp::traits::input_parameter< arma::mat >::type R(RSEXP);
    Rcpp::traits::input_parameter< double >::type S(SSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type Ds(DsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mustar(mustarSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type c(cSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type step(stepSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type runif(runifSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type T0(T0SEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type D(DSEXP);
    rcpp_result_gen = Rcpp::wrap(updateBetanoDPP(X, Y, Z, delta, Beta, Gamma, E, R, S, Ds, mustar, mu, sigma, c, step, runif, n, m, T0, p, q, D));
    return rcpp_result_gen;
END_RCPP
}
// updateGammanoDPP
List updateGammanoDPP(arma::mat X, arma::mat Y, arma::mat Z, arma::mat delta, arma::mat Beta, arma::cube Gamma, arma::rowvec E, arma::mat R, double S, arma::rowvec Ds, arma::mat mu, arma::mat mustar, double sigma, arma::rowvec c, arma::cube step, arma::cube runif, int n, int m, int T0, int p, int q, arma::mat D);
RcppExport SEXP _BAREB_updateGammanoDPP(SEXP XSEXP, SEXP YSEXP, SEXP ZSEXP, SEXP deltaSEXP, SEXP BetaSEXP, SEXP GammaSEXP, SEXP ESEXP, SEXP RSEXP, SEXP SSEXP, SEXP DsSEXP, SEXP muSEXP, SEXP mustarSEXP, SEXP sigmaSEXP, SEXP cSEXP, SEXP stepSEXP, SEXP runifSEXP, SEXP nSEXP, SEXP mSEXP, SEXP T0SEXP, SEXP pSEXP, SEXP qSEXP, SEXP DSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Beta(BetaSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type Gamma(GammaSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type E(ESEXP);
    Rcpp::traits::input_parameter< arma::mat >::type R(RSEXP);
    Rcpp::traits::input_parameter< double >::type S(SSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type Ds(DsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mu(muSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mustar(mustarSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type c(cSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type step(stepSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type runif(runifSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type T0(T0SEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type D(DSEXP);
    rcpp_result_gen = Rcpp::wrap(updateGammanoDPP(X, Y, Z, delta, Beta, Gamma, E, R, S, Ds, mu, mustar, sigma, c, step, runif, n, m, T0, p, q, D));
    return rcpp_result_gen;
END_RCPP
}
// updateRnoDPP
List updateRnoDPP(arma::mat Beta, arma::cube Gamma, arma::mat X, arma::mat Y, arma::mat Z, arma::mat delta, arma::rowvec E, arma::mat R, int S, arma::rowvec Ds, arma::mat mu, arma::mat mustar, double sigma, arma::rowvec Ms, int n, int m, int T0, int p, int q, arma::mat D, int Dmax);
RcppExport SEXP _BAREB_updateRnoDPP(SEXP BetaSEXP, SEXP GammaSEXP, SEXP XSEXP, SEXP YSEXP, SEXP ZSEXP, SEXP deltaSEXP, SEXP ESEXP, SEXP RSEXP, SEXP SSEXP, SEXP DsSEXP, SEXP muSEXP, SEXP mustarSEXP, SEXP sigmaSEXP, SEXP MsSEXP, SEXP nSEXP, SEXP mSEXP, SEXP T0SEXP, SEXP pSEXP, SEXP qSEXP, SEXP DSEXP, SEXP DmaxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Beta(BetaSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type Gamma(GammaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type E(ESEXP);
    Rcpp::traits::input_parameter< arma::mat >::type R(RSEXP);
    Rcpp::traits::input_parameter< int >::type S(SSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type Ds(DsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mu(muSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mustar(mustarSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type Ms(MsSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type T0(T0SEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type D(DSEXP);
    Rcpp::traits::input_parameter< int >::type Dmax(DmaxSEXP);
    rcpp_result_gen = Rcpp::wrap(updateRnoDPP(Beta, Gamma, X, Y, Z, delta, E, R, S, Ds, mu, mustar, sigma, Ms, n, m, T0, p, q, D, Dmax));
    return rcpp_result_gen;
END_RCPP
}
// Split_empty
List Split_empty(arma::rowvec w, int K, arma::mat Gamma, arma::rowvec R, arma::mat C, double theta, double tau, int m, int q, double hyper_delta);
RcppExport SEXP _BAREB_Split_empty(SEXP wSEXP, SEXP KSEXP, SEXP GammaSEXP, SEXP RSEXP, SEXP CSEXP, SEXP thetaSEXP, SEXP tauSEXP, SEXP mSEXP, SEXP qSEXP, SEXP hyper_deltaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::rowvec >::type w(wSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Gamma(GammaSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type R(RSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type C(CSEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    Rcpp::traits::input_parameter< double >::type hyper_delta(hyper_deltaSEXP);
    rcpp_result_gen = Rcpp::wrap(Split_empty(w, K, Gamma, R, C, theta, tau, m, q, hyper_delta));
    return rcpp_result_gen;
END_RCPP
}
// Merge_empty
List Merge_empty(arma::rowvec w, int K, arma::mat Gamma, arma::rowvec R, arma::mat C, double theta, double tau, int m, int q, double hyper_delta);
RcppExport SEXP _BAREB_Merge_empty(SEXP wSEXP, SEXP KSEXP, SEXP GammaSEXP, SEXP RSEXP, SEXP CSEXP, SEXP thetaSEXP, SEXP tauSEXP, SEXP mSEXP, SEXP qSEXP, SEXP hyper_deltaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::rowvec >::type w(wSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Gamma(GammaSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type R(RSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type C(CSEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    Rcpp::traits::input_parameter< double >::type hyper_delta(hyper_deltaSEXP);
    rcpp_result_gen = Rcpp::wrap(Merge_empty(w, K, Gamma, R, C, theta, tau, m, q, hyper_delta));
    return rcpp_result_gen;
END_RCPP
}
// RJi_empty
List RJi_empty(arma::rowvec w, int K, arma::mat Gamma, arma::rowvec R, arma::mat C, double theta, double tau, int m, int q, double hyper_delta);
RcppExport SEXP _BAREB_RJi_empty(SEXP wSEXP, SEXP KSEXP, SEXP GammaSEXP, SEXP RSEXP, SEXP CSEXP, SEXP thetaSEXP, SEXP tauSEXP, SEXP mSEXP, SEXP qSEXP, SEXP hyper_deltaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::rowvec >::type w(wSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Gamma(GammaSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type R(RSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type C(CSEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    Rcpp::traits::input_parameter< double >::type hyper_delta(hyper_deltaSEXP);
    rcpp_result_gen = Rcpp::wrap(RJi_empty(w, K, Gamma, R, C, theta, tau, m, q, hyper_delta));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_BAREB_nonnan_ind", (DL_FUNC) &_BAREB_nonnan_ind, 1},
    {"_BAREB_rowsome", (DL_FUNC) &_BAREB_rowsome, 2},
    {"_BAREB_ton", (DL_FUNC) &_BAREB_ton, 1},
    {"_BAREB_colsome", (DL_FUNC) &_BAREB_colsome, 2},
    {"_BAREB_subsome", (DL_FUNC) &_BAREB_subsome, 2},
    {"_BAREB_dmvnrm_arma0", (DL_FUNC) &_BAREB_dmvnrm_arma0, 4},
    {"_BAREB_dmvnrm_arma", (DL_FUNC) &_BAREB_dmvnrm_arma, 4},
    {"_BAREB_kernelC", (DL_FUNC) &_BAREB_kernelC, 4},
    {"_BAREB_updateC", (DL_FUNC) &_BAREB_updateC, 3},
    {"_BAREB_getind", (DL_FUNC) &_BAREB_getind, 2},
    {"_BAREB_ind", (DL_FUNC) &_BAREB_ind, 2},
    {"_BAREB_updateBeta", (DL_FUNC) &_BAREB_updateBeta, 25},
    {"_BAREB_updateBetanomiss", (DL_FUNC) &_BAREB_updateBetanomiss, 23},
    {"_BAREB_ind1", (DL_FUNC) &_BAREB_ind1, 3},
    {"_BAREB_updateGamma", (DL_FUNC) &_BAREB_updateGamma, 24},
    {"_BAREB_updateGammanomiss", (DL_FUNC) &_BAREB_updateGammanomiss, 22},
    {"_BAREB_updateE", (DL_FUNC) &_BAREB_updateE, 21},
    {"_BAREB_updateEnomiss", (DL_FUNC) &_BAREB_updateEnomiss, 19},
    {"_BAREB_updatemu", (DL_FUNC) &_BAREB_updatemu, 11},
    {"_BAREB_Split", (DL_FUNC) &_BAREB_Split, 21},
    {"_BAREB_Splitnomiss", (DL_FUNC) &_BAREB_Splitnomiss, 19},
    {"_BAREB_Merge", (DL_FUNC) &_BAREB_Merge, 21},
    {"_BAREB_Mergenomiss", (DL_FUNC) &_BAREB_Mergenomiss, 19},
    {"_BAREB_RJi", (DL_FUNC) &_BAREB_RJi, 21},
    {"_BAREB_RJinomiss", (DL_FUNC) &_BAREB_RJinomiss, 19},
    {"_BAREB_updateRi", (DL_FUNC) &_BAREB_updateRi, 15},
    {"_BAREB_updateRinomiss", (DL_FUNC) &_BAREB_updateRinomiss, 13},
    {"_BAREB_sample_int", (DL_FUNC) &_BAREB_sample_int, 2},
    {"_BAREB_updateR", (DL_FUNC) &_BAREB_updateR, 19},
    {"_BAREB_updateRnomiss", (DL_FUNC) &_BAREB_updateRnomiss, 17},
    {"_BAREB_updatemustar", (DL_FUNC) &_BAREB_updatemustar, 5},
    {"_BAREB_rtrun_norm", (DL_FUNC) &_BAREB_rtrun_norm, 4},
    {"_BAREB_updateZstar", (DL_FUNC) &_BAREB_updateZstar, 4},
    {"_BAREB_updatec", (DL_FUNC) &_BAREB_updatec, 6},
    {"_BAREB_updateBetanoDPP", (DL_FUNC) &_BAREB_updateBetanoDPP, 22},
    {"_BAREB_updateGammanoDPP", (DL_FUNC) &_BAREB_updateGammanoDPP, 22},
    {"_BAREB_updateRnoDPP", (DL_FUNC) &_BAREB_updateRnoDPP, 21},
    {"_BAREB_Split_empty", (DL_FUNC) &_BAREB_Split_empty, 10},
    {"_BAREB_Merge_empty", (DL_FUNC) &_BAREB_Merge_empty, 10},
    {"_BAREB_RJi_empty", (DL_FUNC) &_BAREB_RJi_empty, 10},
    {NULL, NULL, 0}
};

RcppExport void R_init_BAREB(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
